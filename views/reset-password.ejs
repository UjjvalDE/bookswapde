<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>BookSwap - Reset Password</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        :root {
            --primary: #EED47E;
            --secondary: #2C3E50;
            --accent: #34495E;
            --light: #F8F9FA;
            --dark: #1A1A1A;
            --white: #FFFFFF;
            --text: #2C3E50;
            --gradient: linear-gradient(135deg, #EED47E, #F4E5A3);
            --shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
            --card-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        }

        body {
            background: var(--light);
            color: var(--text);
            font-family: 'Inter', sans-serif;
            display: flex;
            flex-direction: column;
            min-height: 100vh;
            justify-content: center;
            align-items: center;
            padding: 2rem;
        }

        .reset-container {
            max-width: 600px;
            width: 100%;
            background: var(--white);
            padding: 3rem;
            border-radius: 30px;
            text-align: center;
            box-shadow: var(--card-shadow);
            animation: fadeIn 0.5s ease-out;
        }

        .reset-icon {
            width: 80px;
            height: 80px;
            background: var(--gradient);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 2rem;
            animation: scaleIn 0.5s ease-out;
        }

        .reset-icon i {
            font-size: 2.5rem;
            color: var(--secondary);
        }

        .reset-title {
            font-size: 2rem;
            font-weight: 700;
            color: var(--secondary);
            margin-bottom: 1rem;
            background: linear-gradient(45deg, var(--secondary), var(--accent));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .reset-message {
            font-size: 1.1rem;
            color: var(--accent);
            line-height: 1.6;
            margin-bottom: 2rem;
            opacity: 0.9;
        }

        .form-group {
            margin-bottom: 1.5rem;
            text-align: left;
        }

        .form-group label {
            display: block;
            font-size: 1rem;
            font-weight: 600;
            color: var(--secondary);
            margin-bottom: 0.5rem;
        }

        .form-control {
            width: 100%;
            padding: 0.75rem 1rem;
            border: 1px solid #e2e8f0;
            border-radius: 8px;
            font-size: 1rem;
            color: var(--secondary);
            transition: border-color 0.3s ease;
        }

        .form-control:focus {
            outline: none;
            border-color: var(--primary);
            box-shadow: 0 0 0 3px rgba(238, 212, 126, 0.2);
        }

        .alert-danger {
            background-color: #fff5f5;
            border: 1px solid #feb2b2;
            color: #c53030;
            padding: 1rem;
            border-radius: 12px;
            margin-bottom: 1.5rem;
            display: none;
        }

        .btn-container {
            display: flex;
            justify-content: center;
            gap: 1rem;
        }

        .btn {
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            padding: 1rem 2rem;
            background: var(--primary);
            color: var(--secondary);
            text-decoration: none;
            font-size: 1rem;
            font-weight: 600;
            border-radius: 30px;
            border: none;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(238, 212, 126, 0.3);
        }

        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(238, 212, 126, 0.4);
            background: var(--gradient);
        }

        .btn i {
            font-size: 1.1rem;
            transition: transform 0.3s ease;
        }

        .btn:hover i {
            transform: translateX(3px);
        }

        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(20px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        @keyframes scaleIn {
            from {
                transform: scale(0);
            }

            to {
                transform: scale(1);
            }
        }

        @media (max-width: 768px) {
            .reset-container {
                padding: 2rem;
            }

            .reset-title {
                font-size: 1.75rem;
            }

            .reset-message {
                font-size: 1rem;
            }

            .btn {
                padding: 0.75rem 1.5rem;
                font-size: 0.9rem;
            }
        }
    </style>
</head>

<body>
    <div class="reset-container">
        <div class="reset-icon">
            <i class="fas fa-lock"></i>
        </div>
        <h1 class="reset-title">Reset Your Password</h1>
        <p class="reset-message">
            Enter your new password below to reset your account password.
        </p>
        <div id="resetError" class="alert alert-danger"></div>
        <form id="resetPasswordForm">
            <div class="form-group">
                <label for="password">New Password</label>
                <input type="password" class="form-control" id="password" name="password" required>
            </div>
            <div class="form-group">
                <label for="confirmpassword">Confirm Password</label>
                <input type="password" class="form-control" id="confirmpassword" name="confirmpassword" required>
            </div>
            <div class="btn-container">
                <button type="submit" class="btn">
                    <span>Reset Password</span>
                    <i class="fas fa-arrow-right"></i>
                </button>
            </div>
        </form>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const form = document.getElementById('resetPasswordForm');
            const errorDiv = document.getElementById('resetError');

            // Extract token from URL
            const urlParams = new URLSearchParams(window.location.search);
            const token = urlParams.get('token');

            if (!token) {
                errorDiv.textContent = 'Invalid or missing token. Please use a valid reset link.';
                errorDiv.style.display = 'block';
                form.style.display = 'none';
                return;
            }

            form.addEventListener('submit', async (e) => {
                e.preventDefault();

                const password = document.getElementById('password').value;
                const confirmpassword = document.getElementById('confirmpassword').value;

                // Client-side validation
                if (password !== confirmpassword) {
                    errorDiv.textContent = 'Passwords do not match.';
                    errorDiv.style.display = 'block';
                    return;
                }

                if (password.length < 6) {
                    errorDiv.textContent = 'Password must be at least 6 characters long.';
                    errorDiv.style.display = 'block';
                    return;
                }

                try {
                    const response = await fetch('/api/reset-forgot-password', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            password,
                            confirmpassword,
                            token
                        })
                    });

                    const data = await response.json();

                    if (data.ReturnCode === 200) {
                        // Show success message and redirect to login
                        errorDiv.style.display = 'none';
                        const successDiv = document.createElement('div');
                        successDiv.className = 'alert alert-success';
                        successDiv.textContent = 'Password reset successfully! Redirecting to login...';
                        successDiv.style.backgroundColor = '#f0fff4';
                        successDiv.style.border = '1px solid #9ae6b4';
                        successDiv.style.color = '#276749';
                        successDiv.style.padding = '1rem';
                        successDiv.style.borderRadius = '12px';
                        successDiv.style.marginBottom = '1.5rem';
                        form.parentNode.insertBefore(successDiv, form);
                        form.style.display = 'none';

                        setTimeout(() => {
                            window.location.href = '/login';
                        }, 2000);
                    } else {
                        errorDiv.textContent = data.ReturnMsg || 'Failed to reset password. Please try again.';
                        errorDiv.style.display = 'block';
                    }
                } catch (error) {
                    console.error('Reset password error:', error);
                    errorDiv.textContent = 'Error resetting password. Please try again.';
                    errorDiv.style.display = 'block';
                }
            });
        });
    </script>
</body>

</html>